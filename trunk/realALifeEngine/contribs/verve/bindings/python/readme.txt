This file contains instructions for generating and distributing the Python
module 'pyverve'.  This process requires SWIG (http://www.swig.org).

Ideally, we could have distutils build an extension module (using the 
pyverve_wrap.cxx file generated by SWIG, or, even better, use the 
pyverve.i SWIG interface file to create a .cxx file and build it into 
an extension module).  However, as of Aug. 2005, it's really hard 
to make this work for the following reasons:
	- On Windows, extension modules must be built with VC 7.1 
	  (and using the VC Toolkit 2003 requires a bunch of extra 
	  work to make this work).
	- On Linux, I don't know how to send flags to SWIG through 
	  distutils (i.e. -c++ and -shadow).  Supposedly Extension() 
	  takes a 'extra_compile_args' argument, but it doesn't seem 
	  to do anything.

Making a .pyd file on Windows would probably be a lot better than 
using a .dll.

Also, when having distutils run SWIG, are all the verve lib sources 
required?  If so, figure out how to get a list of all *.cpp and *.h 
files from a directory automatically.


Generating the 'pyverve' Module in UNIX or Win32
------------------------------------------------
1. Build the verve.dll/libverve.so file.

2. Run the SConstruct with the 'python' option enabled:

	scons python

This will use SWIG to process the verve.i interface file and generate the Python bindings (pyverve.py) and the pyverve_wrap.cxx file.  It will then automatically compile the pyverve_wrap.cxx file into the native shared library file (e.g. _pyverve.so or _pyverve.dll).


Creating a Distributable File
-----------------------------
Run one of the following commands to package the python files and 
native shared library into a distributable file: 

python setup.py bdist --format=wininst
python setup.py bdist --format=rpm
python setup.py bdist --format=zip
python setup.py bdist --format=gztar

Installing the Distributable Module
-----------------------------------
python setup.py install
