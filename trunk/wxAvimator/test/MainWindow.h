// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef MainWindow_h
#define MainWindow_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include "MainWindow_src.h"
#define APPLICATION_NAME "Avimator"
extern void cb_MainWindow(Fl_Double_Window*, void*);
#include <FL/Fl_Menu_Bar.H>
extern void cb_New(Fl_Menu_*, void*);
extern void cb_Open(Fl_Menu_*, void*);
extern void cb_Save(Fl_Menu_*, void*);
extern void cb_SaveAs(Fl_Menu_*, void*);
extern void cb_Exit(Fl_Menu_*, void*);
extern void cb_CopyFrame(Fl_Menu_*, void*);
extern void cb_PasteFrame(Fl_Menu_*, void*);
extern void cb_FigureMale(Fl_Menu_*, void*);
extern void cb_FigureFemale(Fl_Menu_*, void*);
extern void cb_JointsShow(Fl_Menu_*, void*);
extern void cb_JointsHide(Fl_Menu_*, void*);
extern void cb_LimitsOn(Fl_Menu_*, void*);
extern void cb_LimitsOff(Fl_Menu_*, void*);
extern void cb_Loop(Fl_Menu_*, void*);
#include <FL/Fl_Pack.H>
#include "AnimationView.h"
extern void cb_AnimationView(AnimationView*, void*);
#include <FL/Fl_Group.H>
#include <FL/Fl_Choice.H>
extern void cb_PartChoice(Fl_Choice*, void*);
#include <FL/Fl_Roller.H>
extern void cb_RotRoller(Fl_Roller*, void*);
#include <FL/Fl_Value_Input.H>
extern void cb_RotValue(Fl_Value_Input*, void*);
extern void cb_PosRoller(Fl_Roller*, void*);
extern void cb_PosValue(Fl_Value_Input*, void*);
#include <FL/Fl_Output.H>
extern void cb_fpsValue(Fl_Value_Input*, void*);
#include <FL/Fl_Slider.H>
extern void cb_FrameSlider(Fl_Slider*, void*);
#include <FL/Fl_Button.H>
extern void cb_PlayBtn(Fl_Button*, void*);
extern void cb_KeyBtn(Fl_Button*, void*);
extern void cb_NumFramesValue(Fl_Value_Input*, void*);

class MainWindow : public Fl_Double_Window {
  void _MainWindow();
public:
  MainWindow(int X, int Y, int W, int H, const char *L = 0);
  MainWindow(int W, int H, const char *L = 0);
  static Fl_Menu_Item menu_[];
  static Fl_Menu_Item *editPasteFrame;
  static Fl_Menu_Item *limits;
  AnimationView *view;
  Fl_Choice *partChoice;
  static Fl_Menu_Item menu_partChoice[];
  Fl_Roller *xRotRoller;
  Fl_Value_Input *xRotValue;
  Fl_Roller *yRotRoller;
  Fl_Value_Input *yRotValue;
  Fl_Roller *zRotRoller;
  Fl_Value_Input *zRotValue;
  Fl_Roller *xPosRoller;
  Fl_Value_Input *xPosValue;
  Fl_Roller *yPosRoller;
  Fl_Value_Input *yPosValue;
  Fl_Roller *zPosRoller;
  Fl_Value_Input *zPosValue;
  Fl_Value_Input *fpsValue;
  Fl_Slider *frameSlider;
  Fl_Button *playBtn;
  Fl_Button *keyBtn;
  Fl_Value_Input *frameValue;
  Fl_Value_Input *numFramesValue;
  char currentFile[256];
  void initialize();
  bool playing;
  Fl_PNG_Image *playImage;
  Fl_PNG_Image *pauseImage;
  Fl_PNG_Image *keyImage;
  Fl_PNG_Image *nokeyImage;
private:
  int handle(int event);
public:
  double frameData[512];
  bool frameDataValid;
  bool loop;
};
#endif
